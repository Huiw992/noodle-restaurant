import{_ as s,C as o,c as r,o as e,a2 as l,b as i,w as a,a as d,G as c,a3 as g}from"./chunks/framework.o8wDBhG9.js";const x=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"docs/foundation/uml.md","filePath":"docs/foundation/uml.md","lastUpdated":1740321489000}'),A={name:"docs/foundation/uml.md"};function m(h,t,p,C,_,u){const n=o("Mermaid");return e(),r("div",null,[t[1]||(t[1]=l('<h2 id="对象和类之间相互关系" tabindex="-1">对象和类之间相互关系 <a class="header-anchor" href="#对象和类之间相互关系" aria-label="Permalink to &quot;对象和类之间相互关系&quot;">​</a></h2><p>UML 中描述对象和类之间相互关系的方式包括：<strong>依赖</strong>（Dependency），<strong>关联</strong>（Association），<strong>聚合</strong>（Aggregation），<strong>组合</strong>（Composition），<strong>泛化</strong>（Generalization），<strong>实现</strong>（Realization）等。</p><h2 id="含义" tabindex="-1">含义 <a class="header-anchor" href="#含义" aria-label="Permalink to &quot;含义&quot;">​</a></h2><p><strong>泛化</strong>（Generalization）：通常所说的继承（特殊个体 is kind of 一般个体）关系，不必多解释了。UML 用带空心箭头的实线线表示 Generalization 关系，箭头指向一般个体。 实现（Realize）：元素 A 定义一个约定，元素 B 实现这个约定，则 B 和 A 的关系是 Realize，B realize A。这个关系最常用于接口。UML 用空心箭头和虚线表示 Realize 关系，箭头指向定义约定的元素。 <strong>聚合</strong>（Aggregation）：关联关系的一种特例，表示部分和整体（整体 has a 部分）的关系。UML 用带空心菱形头的实线表示 Aggregation 关系，菱形头指向整体。 组合（Composition）：组合是聚合关系的变种，表示元素间更强的组合关系。如果是组合关系，如果整体被破坏则个体一定会被破坏，而聚合的个体则可能是被多个整体所共享的，不一定会随着某个整体的破坏而被破坏。UML 用带实心菱形头的实线表示 Composition 关系，菱形头指向整体。 <strong>依赖</strong>（Dependency）：元素 A 的变化会影响元素 B，但反之不成立，那么 B 和 A 的关系是依赖关系，B 依赖 A；类属关系和实现关系在语义上讲也是依赖关系，但由于其有更特殊的用途，所以被单独描述。UML 用带箭头的虚线表示 Dependency 关系，箭头指向被依赖元素。 <strong>关联</strong>（Association）：元素间的结构化关系，是一种弱关系，被关联的元素间通常可以被独立的考虑。UML 用实线表示 Association 关系，箭头指向被依赖元素。</p><h2 id="五种类间关系的图形表示介绍" tabindex="-1">五种类间关系的图形表示介绍： <a class="header-anchor" href="#五种类间关系的图形表示介绍" aria-label="Permalink to &quot;五种类间关系的图形表示介绍：&quot;">​</a></h2><table tabindex="0"><thead><tr><th style="text-align:center;">关联</th><th style="text-align:center;">依赖</th><th style="text-align:center;">聚集</th><th style="text-align:center;">泛化 extends</th><th style="text-align:center;">实现 implements</th></tr></thead><tbody><tr><td style="text-align:center;">带实线的箭头</td><td style="text-align:center;">带虚线的箭头</td><td style="text-align:center;">菱形箭头</td><td style="text-align:center;">带实线的三角形箭头</td><td style="text-align:center;">带虚线的三角形箭头 implements</td></tr></tbody></table>',6)),(e(),i(g,null,{default:a(()=>[c(n,{id:"mermaid-55",class:"mermaid",graph:"classDiagram%0A%20%20%20%20ClassA%20%3C--%20ClassB%3A%E5%85%B3%E8%81%94%0A%20%20%20%20ClassA%20%3C..%20ClassB%20%3A%20%E4%BE%9D%E8%B5%96%0A%20%20%20%20ClassA%20o--%20ClassB%3A%E8%81%9A%E9%9B%86%0A%20%20%20%20ClassA%20%3C%7C--%20ClassB%3A%E6%B3%9B%E5%8C%96%0A%20%20%20%20ClassA%20%3C%7C..%20ClassB%3A%E5%AE%9E%E7%8E%B0%0A"})]),fallback:a(()=>t[0]||(t[0]=[d(" Loading... ")])),_:1}))])}const f=s(A,[["render",m]]);export{x as __pageData,f as default};
