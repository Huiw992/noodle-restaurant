import{_ as e,c as i,o,ag as n}from"./chunks/framework.Dm51NjPT.js";const u=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"docs/render/basics.md","filePath":"docs/render/basics.md","lastUpdated":1740321489000}'),d={name:"docs/render/basics.md"};function t(r,a,s,l,b,c){return o(),i("div",null,a[0]||(a[0]=[n('<h2 id="分类" tabindex="-1">分类 <a class="header-anchor" href="#分类" aria-label="Permalink to &quot;分类&quot;">​</a></h2><ol><li>网格吸附</li><li>极轴吸附</li><li>参考线吸附</li><li>对象吸附</li></ol><h2 id="概念" tabindex="-1">概念 <a class="header-anchor" href="#概念" aria-label="Permalink to &quot;概念&quot;">​</a></h2><h3 id="aabb-盒-axis-aligned-bounding-box-轴对齐包围盒" tabindex="-1">AABB 盒（Axis-Aligned Bounding Box，轴对齐包围盒） <a class="header-anchor" href="#aabb-盒-axis-aligned-bounding-box-轴对齐包围盒" aria-label="Permalink to &quot;AABB 盒（Axis-Aligned Bounding Box，轴对齐包围盒）&quot;">​</a></h3><p>AABB 盒（Axis-Aligned Bounding Box，轴对齐包围盒）是最小包围盒（Minimum Bounding Box）的一种，优点是计算快速，仅需求解所有顶点的最大最小 xy 值即可求出最小包围盒，时间复杂度为，N 为顶点数量。</p><h3 id="obb-盒-oriented-bounding-box-定向包容盒子" tabindex="-1">OBB 盒（Oriented Bounding Box，定向包容盒子） <a class="header-anchor" href="#obb-盒-oriented-bounding-box-定向包容盒子" aria-label="Permalink to &quot;OBB 盒（Oriented Bounding Box，定向包容盒子）&quot;">​</a></h3><p>OBB 盒（Oriented Bounding Box，定向包容盒子），时间复杂度为</p>',7)]))}const x=e(d,[["render",t]]);export{u as __pageData,x as default};
